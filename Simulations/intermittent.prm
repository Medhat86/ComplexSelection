/*******************************
 **     Global parameters     **
 *******************************/
title = "1000 QTL Simulation - Creating a LTS population - 100k SNP panel";
nthread = 16;
nrep  = 100;                    //Number of replicates
h2    = 0.5;                  //Heritability
qtlh2 = 0.5;                  //QTL heritability
phvar = 1.0;                  //Phenotypic variance

/*******************************
 **   Historical population   **
 *******************************/
begin_hp;
   hg_size = 10000 [0]          //Size of the historical generations
             10000 [5000];
   nmlhg   = 5000;              //Number of males in the last generation
end_hp;

/*******************************
 **        Populations        **
 *******************************/
begin_pop = "1GenSelect";
   begin_founder;
      male   [n =  500, pop = "hp"];
      female [n = 500, pop = "hp"];
   end_founder;
   ls  = 10;          //Litter size
   pmp = 0.5 /fix;            //Proportion of male progeny
   ng  = 1;                  //Number of generations
   md  = rnd_ug;              //Mating design
   sr  = 1;                   //Replacement ratio for sires
   dr  = 1;                   //Replacement ratio for dams
   sd  = phen /h;             //Selection design
   cd  = age;             //Culling design
   begin_popoutput;
        ld /maft 0.1 /gen 1;
	data /gen 1;
        stat;
        genotype /snp_code /gen 1;
        allele_freq /gen 0 1;
   end_popoutput;
end_pop;

begin_pop = "20GenSelect";
   begin_founder;
      male   [n =  500, pop = "hp"];
      female [n = 500, pop = "hp"];
   end_founder;
   ls  = 10;          //Litter size
   pmp = 0.5 /fix;            //Proportion of male progeny
   ng  = 20;                  //Number of generations
   md  = rnd_ug;              //Mating design
   sr  = 1;                   //Replacement ratio for sires
   dr  = 1;                   //Replacement ratio for dams
   sd  = phen /h;             //Selection design
   cd  = age;             //Culling design
   begin_popoutput;
        ld /maft 0.1 /gen 20;
	data /gen 20;
        stat;
        genotype /snp_code /gen 20;
        allele_freq /gen 0 20;
   end_popoutput;
end_pop;

begin_pop = "1Select_5Not";
   begin_founder;
      male   [n =  500, pop = "1GenSelect", gen = 1];
      female [n = 500, pop = "1GenSelect", gen = 1];
   end_founder;
   ls  = 10;          //Litter size
   pmp = 0.5 /fix;            //Proportion of male progeny
   ng  = 5;                  //Number of generations
   md  = rnd_ug;              //Mating design
   sr  = 1;                   //Replacement ratio for sires
   dr  = 1;                   //Replacement ratio for dams
   sd  = rnd;             //Selection design
   cd  = age;             //Culling design
   begin_popoutput;
        ld /maft 0.1 /gen 5;
	data /gen 5;
        stat;
        genotype /snp_code /gen 5;
        allele_freq /gen 0 5;
   end_popoutput;
end_pop;


begin_pop = "1Select_20Not";
   begin_founder;
      male   [n =  500, pop = "1GenSelect", gen = 1];
      female [n = 500, pop = "1GenSelect", gen = 1];
   end_founder;
   ls  = 10;          //Litter size
   pmp = 0.5 /fix;            //Proportion of male progeny
   ng  = 20;                  //Number of generations
   md  = rnd_ug;              //Mating design
   sr  = 1;                   //Replacement ratio for sires
   dr  = 1;                   //Replacement ratio for dams
   sd  = rnd;             //Selection design
   cd  = age;             //Culling design
   begin_popoutput;
        ld /maft 0.1 /gen 20;
	data /gen 20;
        stat;
        genotype /snp_code /gen 20;
        allele_freq /gen 0 20;
   end_popoutput;
end_pop;


begin_pop = "20Select_5Not";
   begin_founder;
      male   [n =  500, pop = "20GenSelect", gen = 20];
      female [n = 500, pop = "20GenSelect", gen = 20];
   end_founder;
   ls  = 10;          //Litter size
   pmp = 0.5 /fix;            //Proportion of male progeny
   ng  = 5;                  //Number of generations
   md  = rnd_ug;              //Mating design
   sr  = 1;                   //Replacement ratio for sires
   dr  = 1;                   //Replacement ratio for dams
   sd  = rnd;             //Selection design
   cd  = age;             //Culling design
   begin_popoutput;
        ld /maft 0.1 /gen 5;
	data /gen 5;
        stat;
        genotype /snp_code /gen 5;
        allele_freq /gen 0 5;
   end_popoutput;
end_pop;

begin_pop = "20Select_20Not";
   begin_founder;
      male   [n =  500, pop = "20GenSelect", gen = 20];
      female [n = 500, pop = "20GenSelect", gen = 20];
   end_founder;
   ls  = 10;          //Litter size
   pmp = 0.5 /fix;            //Proportion of male progeny
   ng  = 20;                  //Number of generations
   md  = rnd_ug;              //Mating design
   sr  = 1;                   //Replacement ratio for sires
   dr  = 1;                   //Replacement ratio for dams
   sd  = rnd;             //Selection design
   cd  = age;             //Culling design
   begin_popoutput;
        ld /maft 0.1 /gen 20;
	data /gen 20;
        stat;
        genotype /snp_code /gen 20;
        allele_freq /gen 0 20;
   end_popoutput;
end_pop;

begin_pop = "20Select_100Not";
   begin_founder;
      male   [n =  500, pop = "20GenSelect", gen = 20];
      female [n = 500, pop = "20GenSelect", gen = 20];
   end_founder;
   ls  = 10;          //Litter size
   pmp = 0.5 /fix;            //Proportion of male progeny
   ng  = 100;                  //Number of generations
   md  = rnd_ug;              //Mating design
   sr  = 1;                   //Replacement ratio for sires
   dr  = 1;                   //Replacement ratio for dams
   sd  = rnd;             //Selection design
   cd  = age;             //Culling design
   begin_popoutput;
        ld /maft 0.1 /gen 100;
	data /gen 100;
        stat;
        genotype /snp_code /gen 100;
        allele_freq /gen 0 100;
   end_popoutput;
end_pop;


/*******************************
 **          Genome           **
 *******************************/
begin_genome;
   begin_chr = 10;
      chrlen = 100;            //Chromosome length
      nmloci = 10000;          //Number of markers
      mpos   = even;           //Marker positions
      nma    = all 2;          //Number of marker alleles
      maf    = rnd1;           //Marker allele frequencies
      nqloci = 100;              //Number of QTL
      qpos   = pd 0.5  1.5  2.5  3.5  4.5  5.5  6.5  7.5  8.5  9.5 10.5 11.5 12.5 13.5 14.5 15.5 16.5 17.5 18.5 19.5 20.5 21.5 22.5 23.5 24.5 25.5 26.5 27.5 28.5 29.5 30.5 31.5 32.5 33.5 34.5 35.5 36.5 37.5 38.5 39.5 40.5 41.5 42.5 43.5 44.5 45.5 46.5 47.5 48.5 49.5 50.5 51.5 52.5 53.5 54.5 55.5 56.5 57.5 58.5 59.5 60.5 61.5 62.5 63.5 64.5 65.5 66.5 67.5 68.5 69.5 70.5 71.5 72.5 73.5 74.5 75.5 76.5 77.5 78.5 79.5 80.5 81.5 82.5 83.5 84.5 85.5 86.5 87.5 88.5 89.5 90.5 91.5 92.5 93.5 94.5 95.5 96.5 97.5 98.5 99.5;           //QTL positions
      nqa    = all 2;          //Number of QTL alleles
      qaf    = eql;         //QTL allele frequencies
      qae    = rnd;         //QTL allele effects
   end_chr;
   select_seg_loci; 	       //Only segregating loci INVESTIGATE MORE??
   mmutr     = 2.5e-5 /recurrent; //Marker mutation rate INVESTIGATE MORE??
   qmutr     = 2.5e-5 /recurrent;            //QTL mutation rate INVESTIGATE MORE??
   //interference = 25;
   //r_mpos_g;                  //Randomize marker positions across genome
   //r_qpos_g;                  //Randomize QTL positions across genome
end_genome;

/*******************************
 **       Output options      **
 *******************************/
begin_output;
   linkage_map;
   allele_effect;
   hp_stat;
   //monitor_hp_homo;
end_output;
